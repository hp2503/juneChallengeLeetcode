// only using 2D vector;

class Solution {
public:
    vector<vector<int>> transpose(vector<vector<int>>& matrix) {
      vector<vector<int>>result(matrix[0].size(),vector<int>(matrix.size(),0));
      for(int i=0;i<matrix.size();i++)
      {
        for(int j=0;j<matrix[0].size();j++)
        {
          result[j][i]=matrix[i][j];
        }
      }
      return result;
        
    }
};



//method 2 first pushing into array then into vector of desired size;
class Solution {
public:
    vector<vector<int>> transpose(vector<vector<int>>& matrix) {
      vector<vector<int>>result;
      int res[matrix[0].size()][matrix.size()];
      for(int i=0;i<matrix.size();i++)
      {
        for(int j=0;j<matrix[0].size();j++)
        {
          res[j][i]=matrix[i][j];
        }
      }
      
      for(int i=0;i<matrix[0].size();i++)
      {
        vector<int>resul;
        for(int j=0;j<matrix.size();j++)
        {
          resul.push_back(res[i][j]);
        }
        result.push_back(resul);
      }
      return result;
        
    }
};
